#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; SV_Position              0   xyzw        1      POS   float       
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: 5b633d92d763eadb01951f951518f6eb
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; TEXCOORD                 0                 linear       
; SV_Position              0          noperspective       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer push
; {
;
;   struct hostlayout.push
;   {
;
;       struct hostlayout.struct.ImguiDrawInfo
;       {
;
;           row_major float4x4 Mvp;                   ; Offset:    0
;           uint TextureIndex;                        ; Offset:   64
;       
;       } push;                                       ; Offset:    0
;
;   
;   } push;                                           ; Offset:    0 Size:    68
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; push                              cbuffer      NA          NA     CB0          cb999     1
; LinearClampSampler                sampler      NA          NA      S0             s0     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 8, 9 }
;   output 1 depends on inputs: { 1, 8, 9 }
;   output 2 depends on inputs: { 2, 8, 9 }
;   output 3 depends on inputs: { 3, 8, 9 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%hostlayout.push = type { %hostlayout.struct.ImguiDrawInfo }
%hostlayout.struct.ImguiDrawInfo = type { [4 x <4 x float>], i32 }
%struct.SamplerState = type { i32 }

@dx.nothing.a = internal constant [1 x i32] zeroinitializer

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 999, i32 999, i32 0, i8 2 }, i32 999, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 13, i32 68 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0)
  %11 = call i32 @dx.op.cbufferLoad.i32(i32 58, %dx.types.Handle %3, i32 64, i32 8)  ; CBufferLoad(handle,byteOffset,alignment)
  %12 = icmp ne i32 %11, -1
  %13 = icmp ne i1 %12, false
  %14 = icmp ne i1 %13, false
  br i1 %14, label %15, label %30

; <label>:15                                      ; preds = %0
  %16 = call i32 @dx.op.cbufferLoad.i32(i32 58, %dx.types.Handle %3, i32 64, i32 8)  ; CBufferLoad(handle,byteOffset,alignment)
  %17 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0)
  %18 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %16, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %19 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %18, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %20 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0)
  %21 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0)
  %22 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0)
  %23 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %24 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %19, %dx.types.Handle %23, float %4, float %5, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %25 = extractvalue %dx.types.ResRet.f32 %24, 0
  %26 = extractvalue %dx.types.ResRet.f32 %24, 1
  %27 = extractvalue %dx.types.ResRet.f32 %24, 2
  %28 = extractvalue %dx.types.ResRet.f32 %24, 3
  %29 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0)
  br label %30

; <label>:30                                      ; preds = %15, %0
  %31 = phi float [ %25, %15 ], [ 1.000000e+00, %0 ]
  %32 = phi float [ %26, %15 ], [ 1.000000e+00, %0 ]
  %33 = phi float [ %27, %15 ], [ 1.000000e+00, %0 ]
  %34 = phi float [ %28, %15 ], [ 1.000000e+00, %0 ]
  %35 = fmul float %6, %31
  %36 = fmul float %7, %32
  %37 = fmul float %8, %33
  %38 = fmul float %9, %34
  %39 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %35)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %36)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %37)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %38)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare i32 @dx.op.cbufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!9}
!dx.entryPoints = !{!10}

!0 = !{!"dxcoob 1.7.2308.7 (69e54e290)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"ps", i32 6, i32 6}
!4 = !{null, null, !5, !7}
!5 = !{!6}
!6 = !{i32 0, %hostlayout.push* undef, !"", i32 0, i32 999, i32 1, i32 68, null}
!7 = !{!8}
!8 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!9 = !{[12 x i32] [i32 10, i32 4, i32 1, i32 2, i32 4, i32 8, i32 0, i32 0, i32 0, i32 0, i32 15, i32 15]}
!10 = !{void ()* @main, !"main", !11, !4, !21}
!11 = !{!12, !19, null}
!12 = !{!13, !16, !18}
!13 = !{i32 0, !"COLOR", i8 9, i8 0, !14, i8 2, i32 1, i8 4, i32 0, i8 0, !15}
!14 = !{i32 0}
!15 = !{i32 3, i32 15}
!16 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !14, i8 2, i32 1, i8 2, i32 2, i8 0, !17}
!17 = !{i32 3, i32 3}
!18 = !{i32 2, !"SV_Position", i8 9, i8 3, !14, i8 4, i32 1, i8 4, i32 1, i8 0, null}
!19 = !{!20}
!20 = !{i32 0, !"SV_Target", i8 9, i8 16, !14, i8 0, i32 1, i8 4, i32 0, i8 0, !15}
!21 = !{i32 0, i64 1073742080}
!22 = !{i32 1}

#ifndef __IMGUI__HLSLI__
#define __IMGUI__HLSLI__


#include "../Include/PhxEngine/Shaders/ShaderInterop.h"
#include "../Include/PhxEngine/Shaders/ShaderInteropStructures.h"
#include "ResourceHeapTables.hlsli"
#include "Defines.hlsli"

#if USE_RESOURCE_HEAP
#define ImGuiRS "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT | CBV_SRV_UAV_HEAP_DIRECTLY_INDEXED )," \
                "RootConstants(num32BitConstants=17, b999), " \
                RS_BINDLESS_DESCRIPTOR_TABLE \
                "StaticSampler(s0, " \
                                "addressU = TEXTURE_ADDRESS_WRAP," \
                                "addressV = TEXTURE_ADDRESS_WRAP," \
                                "addressW = TEXTURE_ADDRESS_WRAP," \
                                "filter = FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR," \
                                "borderColor = STATIC_BORDER_COLOR_TRANSPARENT_BLACK)"
#else
#define ImGuiRS "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT )," \
                "RootConstants(num32BitConstants=17, b999), " \
                RS_BINDLESS_DESCRIPTOR_TABLE \
                "StaticSampler(s0, " \
                                "addressU = TEXTURE_ADDRESS_WRAP," \
                                "addressV = TEXTURE_ADDRESS_WRAP," \
                                "addressW = TEXTURE_ADDRESS_WRAP," \
                                "filter = FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR," \
                                "borderColor = STATIC_BORDER_COLOR_TRANSPARENT_BLACK)"

#endif

PUSH_CONSTANT(push, ImguiDrawInfo);

struct VSInput
{
    float2 Position : POSITION;
    float2 TexCoord : TEXCOORD;
    float4 Color : COLOR;
};

struct PSInput
{
    float4 Colour : COLOR;
    float2 TexCoord : TEXCOORD;
    float4 Position : SV_Position;
};

#ifdef IMGUI_COMPILE_VS

[RootSignature(ImGuiRS)]
PSInput main(VSInput input)
{
    PSInput output;
    output.Position = mul(float4(input.Position.xy, 0.f, 1.f), push.Mvp);
    output.Colour = input.Color;
    output.TexCoord = input.TexCoord;

    return output;
}
#endif

#ifdef IMGUI_COMPILE_PS

SamplerState LinearClampSampler : register(s0);

[RootSignature(ImGuiRS)]
float4 main(PSInput input) : SV_Target
{
    float4 textureColour = float4(1.0f, 1.0f, 1.0f, 1.0f);
    if (push.TextureIndex != InvalidDescriptorIndex)
    {
        textureColour = ResourceHeap_GetTexture(push.TextureIndex).Sample(LinearClampSampler, input.TexCoord);
    }

    return input.Colour * textureColour;
}
#endif

#endif 
#endif

constexpr unsigned char g_mainPS[] = {
  0x44, 0x58, 0x42, 0x43, 0x02, 0x25, 0x20, 0x8c, 0x96, 0xc8, 0x55, 0xb9,
  0xda, 0xcd, 0x0d, 0x67, 0xc7, 0x5e, 0xe0, 0x22, 0x01, 0x00, 0x00, 0x00,
  0xf8, 0x12, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00,
  0x1c, 0x02, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0x38, 0x0a, 0x00, 0x00,
  0x54, 0x0a, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x84, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65,
  0x74, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xfc, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x03,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00,
  0xe7, 0x03, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x64, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x95, 0x01, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0xa8, 0x07, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00,
  0xea, 0x01, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x90, 0x07, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xe1, 0x01, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x98, 0xc1, 0x1c, 0x01, 0x18, 0x64, 0x00, 0x40, 0xc1, 0x08, 0x40,
  0x09, 0x06, 0x22, 0x66, 0x00, 0xe6, 0x08, 0x90, 0x62, 0x18, 0x00, 0x00,
  0x1c, 0x00, 0x21, 0xc5, 0x18, 0x00, 0x00, 0x38, 0x0c, 0x52, 0xe8, 0xb8,
  0x67, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08,
  0x14, 0x30, 0x73, 0x04, 0x41, 0x29, 0x1a, 0x00, 0x70, 0x1c, 0x7a, 0x6e,
  0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0x5a, 0x89, 0xc9,
  0x2f, 0x6e, 0x1b, 0x15, 0x86, 0x61, 0x18, 0x40, 0x61, 0x22, 0xa0, 0x69,
  0x0c, 0xc3, 0x30, 0x00, 0x00, 0x30, 0x48, 0x2a, 0x05, 0x00, 0x34, 0x00,
  0x40, 0xd4, 0x6d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a, 0x48,
  0x0e, 0x15, 0x09, 0x44, 0x1a, 0x39, 0x0f, 0x11, 0x4d, 0x08, 0x21, 0x21,
  0x01, 0x00, 0x0a, 0xd1, 0x00, 0x8d, 0x45, 0xd7, 0x41, 0xc3, 0xe5, 0x4f,
  0xd8, 0x43, 0x48, 0xfe, 0x4a, 0x48, 0x1b, 0xd2, 0x0c, 0x88, 0x00, 0x00,
  0xe0, 0x28, 0x45, 0x03, 0x64, 0x80, 0x43, 0xda, 0x40, 0xc0, 0x30, 0x02,
  0x61, 0x24, 0x41, 0x77, 0xdf, 0xe1, 0x48, 0xd3, 0x02, 0x60, 0x0e, 0x35,
  0xf9, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0x8b, 0x8c, 0x41, 0x21, 0x5d, 0x04,
  0x58, 0x62, 0x53, 0x38, 0x48, 0xf0, 0x80, 0x7b, 0x0e, 0x47, 0x9a, 0x16,
  0x00, 0x73, 0xa8, 0xc9, 0x7f, 0x28, 0xe9, 0x40, 0xc1, 0x47, 0xe0, 0x4d,
  0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xb3, 0x00, 0xf3, 0x2c, 0x44, 0xc4, 0x4e,
  0xc0, 0x44, 0xa0, 0x00, 0x20, 0x31, 0x19, 0x80, 0x39, 0x02, 0x50, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23,
  0x25, 0x40, 0x00, 0x1e, 0xc8, 0x60, 0x0c, 0x79, 0x08, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x20, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x51, 0x80,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xf3,
  0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x47, 0x02, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0x0f, 0x05, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x9e, 0x0b, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x1a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x64, 0x81, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x02, 0x4a, 0xa0, 0x18, 0x46, 0x00, 0xca, 0xf9, 0xa1,
  0x10, 0x03, 0x8a, 0xa0, 0x10, 0xca, 0xa0, 0x1c, 0x4a, 0xa2, 0x00, 0x03,
  0x4a, 0xa1, 0x3c, 0x0a, 0x8b, 0xca, 0x02, 0x24, 0x04, 0x04, 0x44, 0xa0,
  0xa3, 0x24, 0x46, 0x00, 0x8a, 0xa0, 0x10, 0xca, 0xa0, 0x40, 0xe8, 0x9b,
  0x01, 0x20, 0x70, 0x06, 0x80, 0xc2, 0x19, 0x00, 0x1a, 0x67, 0x00, 0x88,
  0x1c, 0x8b, 0x51, 0x88, 0x40, 0x20, 0x10, 0x00, 0x00, 0x80, 0xe7, 0xa1,
  0x60, 0x04, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec,
  0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7,
  0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07,
  0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x80, 0x64, 0x82, 0x00, 0x28, 0x1b,
  0x84, 0x81, 0x98, 0x20, 0x00, 0xcb, 0x06, 0xc1, 0x30, 0x28, 0xc0, 0xcd,
  0x6d, 0x18, 0x10, 0x82, 0x98, 0x20, 0x84, 0x01, 0x18, 0x90, 0x80, 0xab,
  0x9b, 0x43, 0x9b, 0x20, 0x00, 0xcc, 0x04, 0x01, 0x68, 0x36, 0x20, 0x86,
  0xb2, 0x18, 0xcc, 0xd0, 0x00, 0x1b, 0x02, 0x67, 0x82, 0x30, 0x06, 0x61,
  0x40, 0x89, 0x29, 0xcd, 0xad, 0x2c, 0x4c, 0x6e, 0x88, 0x2d, 0xac, 0x0d,
  0x6e, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x4c, 0x6e, 0x03, 0x62, 0x40, 0x91,
  0x61, 0x0c, 0x06, 0xb0, 0x21, 0x90, 0x36, 0x10, 0x00, 0xf0, 0x4c, 0x13,
  0x84, 0xcf, 0xe3, 0xd0, 0x64, 0x07, 0x37, 0x41, 0x00, 0x9c, 0x09, 0x02,
  0xf0, 0x6c, 0x18, 0x30, 0x6c, 0x98, 0x20, 0x00, 0xd0, 0x04, 0x01, 0x88,
  0x26, 0x08, 0x80, 0xb4, 0x01, 0x21, 0xac, 0x2b, 0xd3, 0x8c, 0x8d, 0x23,
  0x43, 0x55, 0x86, 0x47, 0x57, 0x27, 0x57, 0x96, 0xe4, 0x46, 0x56, 0x86,
  0x37, 0x41, 0x00, 0xa6, 0x09, 0x02, 0x40, 0x6d, 0x30, 0x08, 0x4f, 0xfb,
  0x36, 0x30, 0xd8, 0x30, 0x34, 0x5d, 0x18, 0x4c, 0x10, 0xc0, 0xe0, 0xdb,
  0x40, 0x10, 0x8b, 0x66, 0x6c, 0x10, 0x1a, 0x32, 0xd8, 0x50, 0x18, 0x95,
  0x18, 0x8c, 0x41, 0x19, 0x4c, 0x10, 0x8a, 0x60, 0x03, 0xb0, 0x61, 0x30,
  0xd0, 0x00, 0x0d, 0x36, 0x04, 0x69, 0xb0, 0x61, 0x18, 0xce, 0x40, 0x0d,
  0x26, 0x08, 0x64, 0x20, 0x06, 0x1b, 0x02, 0x36, 0x20, 0xd1, 0x16, 0x96,
  0xe6, 0xc6, 0x62, 0xe8, 0x89, 0xe9, 0x49, 0x6a, 0x82, 0x70, 0x60, 0x13,
  0x84, 0x23, 0xdb, 0x10, 0x18, 0x13, 0x84, 0x43, 0x9b, 0x20, 0x1c, 0xdb,
  0x04, 0x01, 0xa8, 0x36, 0x08, 0x5a, 0x1d, 0x6c, 0x58, 0x8c, 0x37, 0x80,
  0x83, 0x38, 0x90, 0x83, 0x39, 0x18, 0xe8, 0xc0, 0x88, 0x03, 0x3b, 0x20,
  0x42, 0x55, 0x84, 0x35, 0xf4, 0xf4, 0x24, 0x45, 0xb4, 0x41, 0xd0, 0xb4,
  0x0d, 0xcb, 0x80, 0x07, 0x70, 0x10, 0x07, 0x72, 0x30, 0x07, 0xc3, 0x1c,
  0x5c, 0x71, 0x90, 0x07, 0x5c, 0xa6, 0xac, 0xbe, 0xa0, 0xde, 0xe6, 0xd2,
  0xe8, 0xd2, 0xde, 0xdc, 0x26, 0x08, 0x07, 0xb7, 0x61, 0xb9, 0xf6, 0x00,
  0x0e, 0xf8, 0x40, 0x0e, 0xe8, 0x60, 0xa0, 0x83, 0x21, 0x0e, 0x80, 0x0d,
  0xc3, 0x1d, 0xe8, 0x41, 0x1f, 0x30, 0x99, 0xb2, 0xfa, 0xa2, 0x0a, 0x93,
  0x3b, 0x2b, 0xa3, 0x9b, 0x20, 0x1c, 0xdd, 0x86, 0xc5, 0xf8, 0x03, 0x38,
  0x00, 0x05, 0x39, 0x88, 0x83, 0x81, 0x0e, 0x8c, 0x38, 0xb0, 0x83, 0x0d,
  0x41, 0x28, 0x6c, 0x18, 0xfc, 0x40, 0x14, 0x80, 0x09, 0x42, 0x19, 0x5c,
  0x1b, 0x04, 0x83, 0x14, 0x36, 0x14, 0x67, 0xe0, 0x06, 0xa3, 0x40, 0x95,
  0x02, 0x11, 0x31, 0xb9, 0x30, 0xb7, 0x31, 0xb4, 0xb2, 0x39, 0x1a, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x73, 0x2c, 0xd2, 0xdc, 0xe6, 0xe8, 0xe6, 0x26,
  0x08, 0x80, 0x45, 0x22, 0xcd, 0x8d, 0x6e, 0x8e, 0xc6, 0x5c, 0xda, 0xd9,
  0x17, 0x1b, 0x19, 0x8d, 0xb9, 0xb4, 0xb3, 0xaf, 0x39, 0x3a, 0x22, 0x74,
  0x65, 0x78, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x1b, 0x9c, 0x53, 0x18, 0x50,
  0x01, 0x4b, 0x05, 0x55, 0x58, 0x05, 0x8d, 0x15, 0x88, 0x56, 0xc0, 0x5c,
  0x61, 0xa8, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46, 0x56, 0xe6, 0x46,
  0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95, 0xc9, 0xcd, 0xa5,
  0xbd, 0xb9, 0x4d, 0x09, 0x88, 0x26, 0x64, 0x78, 0x2e, 0x76, 0x61, 0x6c,
  0x76, 0x65, 0x72, 0x53, 0x02, 0xa3, 0x0e, 0x19, 0x9e, 0xcb, 0x1c, 0x5a,
  0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94, 0x00, 0x29,
  0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27, 0x37, 0x56, 0x36,
  0x37, 0x25, 0x98, 0x2a, 0x91, 0xe1, 0xb9, 0xd0, 0xe5, 0xc1, 0x95, 0x05,
  0xb9, 0xb9, 0xbd, 0xd1, 0x85, 0xd1, 0xa5, 0xbd, 0xb9, 0xcd, 0x4d, 0x11,
  0xca, 0x40, 0x0d, 0xea, 0x90, 0xe1, 0xb9, 0xd8, 0xa5, 0x95, 0xdd, 0x25,
  0x91, 0x4d, 0xd1, 0x85, 0xd1, 0x95, 0x4d, 0x09, 0xd8, 0xa0, 0x0e, 0x19,
  0x9e, 0x4b, 0x99, 0x1b, 0x9d, 0x5c, 0x1e, 0xd4, 0x5b, 0x9a, 0x1b, 0xdd,
  0xdc, 0x94, 0xa0, 0x14, 0xba, 0x90, 0xe1, 0xb9, 0x8c, 0xbd, 0xd5, 0xb9,
  0xd1, 0x95, 0xc9, 0xcd, 0x4d, 0x09, 0x5c, 0x01, 0x79, 0x18, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x63, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x00, 0x1e, 0xe4, 0xa1, 0x1c, 0xc6, 0x21, 0x1d, 0xe6, 0xa1, 0x1c, 0x66,
  0x30, 0x11, 0x39, 0xe0, 0x83, 0x1b, 0x88, 0x83, 0x3c, 0x94, 0x43, 0x38,
  0xac, 0x83, 0x1b, 0x88, 0x83, 0x3c, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x25, 0x00, 0x00, 0x00, 0x06, 0xc0, 0x0c, 0x97, 0xdf, 0x38, 0xd3, 0x81,
  0x34, 0x86, 0x0f, 0xd8, 0x01, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x40, 0xd3,
  0x38, 0x13, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x06, 0xd5, 0x70,
  0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0xe0,
  0x23, 0xb7, 0x6d, 0x08, 0xdd, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01,
  0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x7c, 0x91, 0xc3, 0x6c, 0x48, 0x33,
  0x20, 0x8d, 0x61, 0x04, 0xda, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01,
  0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x7c, 0x91, 0xc3, 0x84, 0x04, 0xf0,
  0x98, 0xc0, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3,
  0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x15, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f,
  0x01, 0xcc, 0xb3, 0x10, 0x7e, 0x71, 0xdb, 0x36, 0x50, 0x0d, 0x97, 0xef,
  0x3c, 0xbe, 0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71,
  0xdb, 0x16, 0x40, 0x30, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5b, 0x63, 0x3d, 0x92, 0xd7, 0x63, 0xea, 0xdb, 0x01, 0x95, 0x1f, 0x95,
  0x15, 0x18, 0xf6, 0xeb, 0x44, 0x58, 0x49, 0x4c, 0x9c, 0x08, 0x00, 0x00,
  0x66, 0x00, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x84, 0x08, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x1e, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xa0, 0xc1, 0x1c, 0x01, 0x18, 0x64, 0x00,
  0x40, 0xc1, 0x08, 0x40, 0x09, 0x06, 0x22, 0x66, 0x00, 0xe6, 0x08, 0x90,
  0x62, 0x18, 0x00, 0x00, 0x1c, 0x00, 0x21, 0xc5, 0x18, 0x00, 0x00, 0x38,
  0x0c, 0x52, 0xe8, 0xb8, 0x67, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f,
  0x81, 0x66, 0x58, 0x08, 0x14, 0x30, 0x73, 0x04, 0x41, 0x29, 0x1a, 0x00,
  0x70, 0x1c, 0x7a, 0x6e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57,
  0x42, 0x5a, 0x89, 0xc9, 0x2f, 0x6e, 0x1b, 0x15, 0x86, 0x61, 0x18, 0x40,
  0x61, 0x22, 0xa0, 0x69, 0x0c, 0xc3, 0x30, 0x00, 0x00, 0x30, 0x48, 0x2a,
  0x05, 0x00, 0x34, 0x00, 0x40, 0xd4, 0x6d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0xfe, 0x4a, 0x48, 0x0e, 0x15, 0x09, 0x44, 0x1a, 0x39, 0x0f, 0x11,
  0x4d, 0x08, 0x21, 0x21, 0x01, 0x00, 0x0a, 0xd1, 0x00, 0x8d, 0x45, 0xd7,
  0x41, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a, 0x48, 0x1b, 0xd2,
  0x0c, 0x88, 0x00, 0x00, 0xe0, 0x28, 0x45, 0x03, 0x64, 0x80, 0x43, 0xda,
  0x40, 0xc0, 0x30, 0x02, 0x61, 0x24, 0x41, 0x77, 0xdf, 0xe1, 0x48, 0xd3,
  0x02, 0x60, 0x0e, 0x35, 0xf9, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0x8b, 0x8c,
  0x41, 0x21, 0x5d, 0x04, 0x58, 0x62, 0x53, 0x38, 0x48, 0xf0, 0x80, 0x7b,
  0x0e, 0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8, 0xc9, 0x7f, 0x28, 0xe9, 0x40,
  0xc1, 0x47, 0xe0, 0x4d, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xb3, 0x00, 0xf3,
  0x2c, 0x44, 0xc4, 0x4e, 0xc0, 0x44, 0xa0, 0x00, 0x20, 0x31, 0x19, 0x80,
  0x39, 0x02, 0x50, 0x20, 0x60, 0x0a, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x25, 0x40, 0x00, 0x1e,
  0xba, 0x31, 0xe4, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0xc8, 0x83, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x90, 0x47, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x03, 0x04, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x09, 0x08, 0x80, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x14, 0x10, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x2e, 0x20,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x68,
  0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x05,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x4a, 0xa0, 0x18, 0xca, 0x61, 0x04, 0xa0, 0x9c, 0x1f, 0x0a, 0x31, 0xa0,
  0x0c, 0xca, 0xa3, 0x08, 0xa8, 0x2c, 0x40, 0x42, 0x40, 0x40, 0x04, 0x3a,
  0x4a, 0x62, 0x04, 0xa0, 0x08, 0x0a, 0xa1, 0x0c, 0x0a, 0x84, 0xc2, 0x19,
  0x00, 0x1a, 0x67, 0x00, 0x88, 0x1c, 0x8b, 0x51, 0x88, 0x40, 0x20, 0x10,
  0x00, 0x00, 0x80, 0xe7, 0xa1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec, 0xed, 0x4d, 0x0c, 0x24,
  0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7, 0xe5, 0x06, 0x04, 0xc5,
  0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07, 0x26, 0x65, 0x43, 0x10,
  0x4c, 0x10, 0x80, 0x64, 0x82, 0x00, 0x28, 0x1b, 0x84, 0x81, 0x98, 0x20,
  0x00, 0xcb, 0x06, 0x61, 0x30, 0x28, 0xc0, 0xcd, 0x6d, 0x18, 0x10, 0x82,
  0x98, 0x20, 0x00, 0xcc, 0x04, 0x21, 0x0c, 0x32, 0x02, 0x13, 0x04, 0xa0,
  0x99, 0x20, 0x00, 0xce, 0x06, 0x44, 0x59, 0x18, 0xa5, 0x19, 0x1c, 0x60,
  0x43, 0xf0, 0x4c, 0x10, 0xc6, 0x40, 0xdb, 0x80, 0x28, 0x11, 0xa3, 0x28,
  0x83, 0x02, 0x6c, 0x08, 0xa4, 0x0d, 0x04, 0x00, 0x40, 0xd3, 0x04, 0x81,
  0x0c, 0xb6, 0x0d, 0x41, 0x35, 0x41, 0x28, 0x02, 0x12, 0x6d, 0x61, 0x69,
  0x6e, 0x2c, 0x86, 0x9e, 0x98, 0x9e, 0xa4, 0x26, 0x08, 0xc7, 0x34, 0x41,
  0x38, 0xa8, 0x0d, 0x81, 0x32, 0x41, 0x38, 0xaa, 0x09, 0xc2, 0x61, 0x4d,
  0x10, 0x80, 0x67, 0x82, 0x00, 0x40, 0x1b, 0x84, 0x0f, 0x0c, 0x36, 0x2c,
  0x4a, 0xa6, 0x6d, 0x5c, 0x37, 0x78, 0xca, 0x16, 0x06, 0x44, 0xa8, 0x8a,
  0xb0, 0x86, 0x9e, 0x9e, 0xa4, 0x88, 0x26, 0x08, 0x40, 0xb4, 0x41, 0xf8,
  0xbe, 0x0d, 0xcb, 0x30, 0x06, 0xda, 0xc6, 0x75, 0x43, 0x47, 0x06, 0x5b,
  0x19, 0x70, 0x99, 0xb2, 0xfa, 0x82, 0x7a, 0x9b, 0x4b, 0xa3, 0x4b, 0x7b,
  0x73, 0x9b, 0x20, 0x1c, 0xd7, 0x86, 0x85, 0x0c, 0xce, 0x40, 0x43, 0x03,
  0xce, 0x1b, 0xbc, 0x61, 0x03, 0x36, 0x0c, 0x62, 0x60, 0x06, 0x69, 0xc0,
  0x64, 0xca, 0xea, 0x8b, 0x2a, 0x4c, 0xee, 0xac, 0x8c, 0x6e, 0x82, 0x70,
  0x60, 0x1b, 0x16, 0x65, 0x0d, 0x34, 0x36, 0xe0, 0xb6, 0xc1, 0x53, 0xb6,
  0x30, 0xd8, 0x10, 0xb4, 0xc1, 0x86, 0x41, 0x0d, 0xdc, 0x00, 0x98, 0x20,
  0x94, 0x81, 0xb4, 0x41, 0x50, 0xe0, 0x60, 0x43, 0x71, 0x61, 0x6f, 0x40,
  0xc5, 0xc1, 0x86, 0x60, 0xa8, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46,
  0x56, 0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95,
  0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x88, 0x26, 0x64, 0x78, 0x2e,
  0x76, 0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x02, 0xa3, 0x0e, 0x19, 0x9e,
  0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb,
  0x94, 0x00, 0x29, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27,
  0x37, 0x56, 0x36, 0x37, 0x25, 0x98, 0xea, 0x90, 0xe1, 0xb9, 0xd8, 0xa5,
  0x95, 0xdd, 0x25, 0x91, 0x4d, 0xd1, 0x85, 0xd1, 0x95, 0x4d, 0x09, 0xaa,
  0x3a, 0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69,
  0x6e, 0x74, 0x73, 0x53, 0x82, 0x38, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x63, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x00, 0x1e, 0xe4, 0xa1, 0x1c, 0xc6, 0x21, 0x1d, 0xe6, 0xa1, 0x1c, 0x66,
  0x30, 0x11, 0x39, 0xe0, 0x83, 0x1b, 0x88, 0x83, 0x3c, 0x94, 0x43, 0x38,
  0xac, 0x83, 0x1b, 0x88, 0x83, 0x3c, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x25, 0x00, 0x00, 0x00, 0x06, 0xc0, 0x0c, 0x97, 0xdf, 0x38, 0xd3, 0x81,
  0x34, 0x86, 0x0f, 0xd8, 0x01, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x40, 0xd3,
  0x38, 0x13, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x06, 0xd5, 0x70,
  0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0xe0,
  0x23, 0xb7, 0x6d, 0x08, 0xdd, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01,
  0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x7c, 0x91, 0xc3, 0x6c, 0x48, 0x33,
  0x20, 0x8d, 0x61, 0x04, 0xda, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01,
  0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x7c, 0x91, 0xc3, 0x84, 0x04, 0xf0,
  0x98, 0xc0, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3,
  0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x15, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f,
  0x01, 0xcc, 0xb3, 0x10, 0x7e, 0x71, 0xdb, 0x36, 0x50, 0x0d, 0x97, 0xef,
  0x3c, 0xbe, 0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71,
  0xdb, 0x16, 0x40, 0x30, 0x00, 0xd2, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x7b, 0x00, 0x00, 0x00, 0x13, 0x04, 0x43, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x04, 0xcc, 0x00, 0x14, 0x42, 0x29, 0x14, 0xec,
  0x40, 0xc9, 0x0e, 0x14, 0x5d, 0x01, 0x06, 0x14, 0x44, 0x69, 0xd4, 0x40,
  0xd1, 0x0e, 0x94, 0x24, 0x44, 0x71, 0x14, 0x1e, 0x39, 0x23, 0x00, 0x74,
  0x94, 0x00, 0x19, 0x33, 0x00, 0x63, 0x04, 0x20, 0x08, 0x82, 0xf8, 0x47,
  0xd6, 0x1c, 0x42, 0x19, 0x38, 0x73, 0x08, 0x11, 0x1a, 0xcc, 0x21, 0xa4,
  0x01, 0x43, 0xd9, 0x1c, 0x04, 0xc3, 0x30, 0xd7, 0x1c, 0x44, 0xd3, 0x30,
  0x15, 0x99, 0x43, 0x1d, 0x81, 0x00, 0x00, 0x0c, 0xc0, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xb5, 0x01, 0x35, 0xa4, 0x81,
  0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x9a, 0x1b, 0x54, 0x43, 0x1a,
  0x2c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x70, 0xc1, 0xc1, 0x15, 0x20,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xd8, 0x81, 0xf6, 0x06, 0x6c,
  0x40, 0x06, 0xdb, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x77, 0xb0,
  0xc1, 0x41, 0x1b, 0x34, 0xdc, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20,
  0x78, 0xc0, 0xb9, 0x81, 0x1b, 0x98, 0x41, 0x37, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x48, 0x1e, 0x74, 0x6f, 0xf0, 0x06, 0x8f, 0x37, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x88, 0x1e, 0x78, 0x70, 0x00, 0x07, 0x67, 0xf0,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xb2, 0x07, 0x5f, 0x1c, 0xc4,
  0x81, 0x19, 0x80, 0x01, 0x29, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x03, 0x2a, 0x0f, 0x3a, 0x84, 0xdb, 0x86, 0x1b, 0x02, 0x2d, 0x0c, 0x86,
  0x1b, 0x02, 0x2b, 0x0c, 0x86, 0x1b, 0x82, 0x2b, 0x0c, 0x66, 0x19, 0x02,
  0x21, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xaa, 0x0f, 0xc2, 0x80,
  0x01, 0x83, 0x8f, 0x20, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1,
  0x13, 0x0a, 0x9e, 0xa0, 0x69, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x70,
  0xfd, 0x81, 0x19, 0x04, 0x16, 0x4d, 0x00, 0x20, 0x0a, 0x00, 0x54, 0x01,
  0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xae, 0x51, 0x50, 0x83, 0x2a,
  0x1b, 0x31, 0x78, 0x00, 0x10, 0x04, 0x03, 0xc9, 0x14, 0xc2, 0xa0, 0x08,
  0x26, 0xc9, 0xf3, 0xfe, 0xe0, 0x0f, 0xdc, 0xc0, 0x1b, 0x4d, 0x08, 0x80,
  0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0x20, 0x0e,
  0x00, 0xb3, 0x04, 0xc2, 0x40, 0x85, 0xa1, 0x04, 0xa6, 0x00, 0x0c, 0x54,
  0x18, 0x4a, 0x80, 0x0a, 0xc0, 0x40, 0x85, 0xa1, 0x04, 0xaa, 0x00, 0x0c,
  0x54, 0x18, 0x4a, 0xc0, 0x0a, 0x40, 0x6d, 0x84, 0xd4, 0x46, 0x48, 0x6d,
  0x84, 0xd4, 0x46, 0x08, 0x95, 0x01, 0x00, 0x46, 0x0c, 0x12, 0x00, 0x04,
  0xc1, 0x40, 0xb9, 0x85, 0x3d, 0x70, 0x05, 0x57, 0x30, 0x85, 0x62, 0xc4,
  0x20, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x5b, 0xd8, 0x03, 0x57, 0x70, 0x05,
  0x37, 0x20, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0xb9, 0x85, 0x3d,
  0x70, 0x05, 0x57, 0x28, 0x85, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c,
  0x94, 0x5b, 0xd8, 0x03, 0x57, 0x70, 0x85, 0x51, 0x10, 0x30, 0x20, 0x06,
  0x08, 0x00, 0x00, 0x00, 0x5b, 0x86, 0x01, 0x92, 0x83, 0x2d, 0x03, 0x01,
  0xc9, 0xc1, 0x96, 0xa1, 0x80, 0xe4, 0x60, 0xcb, 0x60, 0x40, 0x72, 0xb0,
  0x65, 0x38, 0x20, 0x39, 0xd8, 0x32, 0x20, 0x90, 0x1c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
